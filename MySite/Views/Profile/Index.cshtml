@model ProfileViewModel
<!-- Page Header -->
<div id="contentProfile">@Html.Partial("ShowProfilePageHeader", Model)</div>

<!-- Main Content -->
<div class="container">
    <div class="col-lg-11 col-md-10 mx-auto">
        @if (Model.MyPosts != null)
        {
            @using (Html.BeginForm("Index", "Profile", FormMethod.Get, new { Id = "myFormSearch" }))
            {

                <div class="d-flex flex-row bd-highlight mb-3">
                    <div class="p-2 bd-highlight" style="width:160px">
                        @*@await Component.InvokeAsync("NavigationMenu")*@
                        <select class="custom-select" id="CategorySelected"
                                aria-label="Example select with button addon"
                                style="font-size:15px" name="category">
                            <option value="All" selected>All</option>
                            @foreach (string category in Model.MyPosts.Categories)
                            {
                                if (category.Equals(Model.MyPosts.CurrentCategory))
                                {
                                    <option value="@category" selected>@category</option>
                                }
                                else
                                {
                                    <option value="@category">@category</option>
                                }

                            }
                        </select>
                    </div>
                    <div class="main p-2 bd-highlight">
                        <!-- Actual search box -->
                        <div class="form-group has-search">
                            <span class="fa fa-search form-control-feedback"></span>
                            <input type="text" class="form-control" placeholder="Search" name="title" id="search">
                        </div>
                    </div>
                    <div class="p-2 bd-highlight">
                        <input type="hidden" value="@Model.Profile.ProfileID" name="profileID" />
                        <button type="submit" class="btn btn-primary" style="padding:8px;border-radius:8px">
                            <p style="font-size:12px;display:inline">Search</p>
                        </button>
                    </div>

                </div>
            }
            <h3 class="h3 text-center  font-weight-bold">My Posts</h3>
            <hr />

            <div id="postContent">@Html.Partial("ShowBlocksPartial", Model.MyPosts)</div>

        }
        else
        {
            <p>No Posts</p>
        }
    </div>
</div>
@section Style{
    <style>


        .subheading {
            cursor: default;
        }
        /* Styles for wrapping the search box */

        .main {
            width: 100%;
        }

        /* Bootstrap 4 text input with search icon */

        .has-search .form-control {
            padding-left: 2.375rem;
        }

        .has-search .form-control-feedback {
            position: absolute;
            z-index: 2;
            display: block;
            width: 2.375rem;
            height: 2.375rem;
            line-height: 2.375rem;
            text-align: center;
            pointer-events: none;
            color: #aaa;
        }
    </style>
}
@section Script{
    <script type="text/javascript">
        $("#myFormSearch").submit(function (e) {
            console.log("It's Here");
            var search = $("#search").val();
            var category = $("#CategorySelected").val();
            e.preventDefault();
            console.log("Serch " + search + " Category " + category);

            $("#postContent").load("/Profile/AjaxSearch", { profileID:@Model.Profile.ProfileID, title: search, category: category });
        });

        $("#editProfileButton").click(function (e) {
            e.preventDefault();

            $("#contentProfile").load("/Profile/Index/", { ajaxRequest: 1, allowEdit: 1, profileID:@Model.Profile.ProfileID});
            //window.history.pushState("data", "Title", "https://localhost:44383/Profile/Edit");
        });

        var countFolower = Number(@Model.Profile.Folowers);
        $("#myForm").submit(function (event) {

            event.preventDefault();
            var testData =
            {
                'profileID': $("#profileID").val(),
                'TestStr2': $("#returnUrl").val()
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("SubAjax","Profile")',
                data: JSON.stringify(testData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });
        });
        function successFunc(data, status) {
            var sub = document.getElementById("mySubText");
            if (data === "Add") {

                sub.innerHTML = "Subscribed:" + (countFolower += 1);
                sub.style.color = "#C0C0C0";


            } else if (data === "Delete") {

                sub.innerHTML = "Subscribe :" + (countFolower -= 1);
                sub.style.color = "#FFFFFF";
            } else if (data === "NewUser") {
                alert("Please Register or Login");
            }
        }

        function errorFunc(errorData) {
            alert('Ошибка' + errorData.responseText);
        }
    </script>
}